{"version":3,"sources":["Components/Square/Square.js","Components/Board/Board.js","Containers/Game/Game.js","App.js","reportWebVitals.js","index.js"],"names":["Square","props","link","classList","col","push","row","value","image","src","alt","className","join","onClick","click","Board","board","i","j","displayBoard","Game","state","history","stepNumber","nextStep","this","slice","current","length","map","calculateWinner","setState","concat","step","winner","statusText","moves","move","desc","jumpTo","squareClickHandler","Component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e546f1cc.chunk.js","sourcesContent":["import React from 'react';\n\nimport './Square.css';\n\nconst Square = (props) => {\n    let classList = ['Square'];\n    if (props.col > 0) {\n        classList.push('borderLeft');\n    }\n    if (props.row > 0) {\n        classList.push('borderTop');\n    }\n\n    let link;\n    if(props.value === 'X') {\n        link = 'https://p.kindpng.com/picc/s/4-46453_cross-mark-black-x-hd-png-download.png';\n    }\n    else if(props.value === 'O') {\n        link = 'https://www.pngfind.com/pngs/m/99-997276_open-black-hollow-circle-transparent-hd-png-download.png';\n    }\n\n    let image = null;\n    if(link) {\n        image = (<img src={link} alt={props.value} />);\n    }\n\n    return (\n        <div className={classList.join(' ')} onClick={props.click} >\n            {image}\n        </div>\n    );\n};\n\nexport default Square;","import React from \"react\";\n\nimport Square from \"../Square/Square\";\nimport './Board.css';\n\nconst Board = (props) => {\n  const displayBoard = () => {\n    let board = [];\n    for (let i = 0; i < 3; i++) {\n      for (let j = 0; j < 3; j++) {\n        board.push(\n            <Square \n                value={props.board[i][j]} \n                key={\"\" + i + j} \n                row={i}\n                col={j}\n                click={() => props.click(i, j)}\n            />);\n      }\n    }\n    return board;\n  };\n\n  return (\n    <div className='Board'>\n        {displayBoard()}\n    </div>\n    );\n};\n\nexport default Board;\n","import React, { Component } from 'react';\n\nimport Board from '../../Components/Board/Board';\nimport './Game.css';\n\nclass Game extends Component {\n    constructor (props) {\n        super(props);\n        this.state = {\n            history: [{\n                board: [\n                    [null, null, null],\n                    [null, null, null],\n                    [null, null, null]\n                ]\n            }],\n            stepNumber: 0,\n            nextStep: 'O',\n        }\n    }\n\n    calculateWinner (board) {\n        for(let row=0; row<3; row++) {\n            if(board[row][0] && board[row][0] === board[row][1] && board[row][0] === board[row][2]) {\n                return board[row][0];\n            }\n        }\n        for(let col=0; col<3; col++) {\n            if(board[0][col] && board[0][col] === board[1][col] && board[0][col] === board[2][col]) {\n                return board[0][col];\n            }\n        }\n        if(board[0][0] && board[0][0] === board[1][1] && board[0][0] === board[2][2]) {\n            return board[0][0];\n        }\n        if(board[0][2] && board[0][2] === board[1][1] && board[0][2] === board[2][0]) {\n            return board[0][2];\n        }\n        return null;\n    }\n\n    squareClickHandler (row, col) {\n        const history = this.state.history.slice(0, this.state.stepNumber+1);\n        const current = [...history[history.length - 1].board].map(row => row.slice());\n        if (current[row][col] || this.calculateWinner(current)) {\n            return;\n        }\n        current[row][col] = this.state.nextStep;\n        this.setState({\n            history: history.concat([{board: current}]),\n            stepNumber: history.length,\n            nextStep: this.state.nextStep === 'O' ? 'X' : 'O',\n        });\n    }\n\n    jumpTo(step) {\n        this.setState({\n            stepNumber: step,\n            nextStep: (step % 2) === 0 ? 'O' : 'X'\n        });\n    }\n\n    render () {\n        const history = this.state.history;\n        const current = history[this.state.stepNumber];\n        const winner = this.calculateWinner(current.board);\n\n        let statusText = 'Turn: ' + (this.state.stepNumber%2 === 0 ? 'O' : 'X');\n        if(winner) {\n            statusText = 'Winner: ' + winner;\n        }\n        else if(this.state.stepNumber === 9) {\n            statusText = 'Draw';\n        }\n\n        const moves = history.map((step, move) => {\n            const desc = move ?\n                'Go to move #' + move :\n                'Go to game start';\n            return (\n                <li key={move} onClick={() => this.jumpTo(move)}>\n                    {desc}\n                </li>\n            );\n        });\n\n        return (\n            <div className='game-container'>\n                <Board \n                    board={current.board} \n                    click={(row, col) => this.squareClickHandler(row, col)}\n                />\n                <div className='game-info'>\n                    <p>{statusText}</p>\n                    <ol>\n                        {moves}\n                    </ol>\n                </div>\n            </div>\n        );\n    }\n};\n\nexport default Game;","import React from 'react';\n\nimport Game from './Containers/Game/Game';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Game />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}